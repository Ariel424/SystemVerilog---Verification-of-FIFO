class transaction;
  
  rand bit rd, wr;  // Random variables representing read and write signals
  rand bit [7:0] data_in;  // Random variable representing input data
  bit full, empty;  // Signals indicating whether the FIFO is full or empty
  bit [7:0] data_out;  // Output data from the FIFO
  
  constraint wr_rd {
    // Constraint ensuring that rd and wr signals are not the same
    rd != wr;
    // Distribution constraint for wr signal (50% chance of being 0, 50% chance of being 1)
    wr dist {0 :/ 50, 1 :/ 50};
    // Distribution constraint for rd signal (50% chance of being 0, 50% chance of being 1)
    rd dist {0 :/ 50, 1 :/ 50};
  }
  
  constraint data_con {
    // Constraint on input data (should be greater than 1 and less than 5)
    data_in > 1;
    data_in < 5;
  }
  
  // Function to display transaction information
  function void display(input string tag);
    $display("[%0s] : WR : %0b\t RD:%0b\t DATAWR : %0d\t DATARD : %0d\t FULL : %0b\t EMPTY : %0b @ %0t", tag, wr, rd, data_in, data_out, full, empty, $time);
  endfunction
  
  // Function to create a copy of the transaction
  function transaction copy();
    copy = new();
    // Copying the values of the transaction variables to the copy
    copy.rd = this.rd;
    copy.wr = this.wr;
    copy.data_in = this.data_in;
    copy.data_out = this.data_out;
    copy.full = this.full;
    copy.empty = this.empty;
  endfunction
  
endclass

module tb;
  
  transaction tr;
  
  initial begin
    tr = new();  // Create a new transaction object
    tr.display("TOP");  // Display the transaction information with a tag "TOP"
  end
  
endmodule
