class driver;
  virtual fifo_if fif; // Virtual interface to connect with the FIFO interface
  mailbox #(transaction) mbx; // Mailbox to communicate between generator and driver
  transaction datac; // Transaction object to store data
  event next; // Event to synchronize generator and driver
 
  function new(mailbox #(transaction) mbx);
    this.mbx = mbx;
  endfunction; 
  
  // Reset DUT
  task reset();
    fif.rst <= 1'b1;
    fif.rd <= 1'b0;
    fif.wr <= 1'b0;
    fif.data_in <= 0;
    repeat(5) @(posedge fif.clock);
    fif.rst <= 1'b0;
  endtask
   
  // Applying random stimulus to DUT
  task run();
    forever begin
      mbx.get(datac); // Get data from the mailbox
      
      datac.display("DRV"); // Display the data
      
      fif.rd <= datac.rd;
      fif.wr <= datac.wr;
      fif.data_in <= datac.data_in;
      repeat(2) @(posedge fif.clock);
      ->next; // Trigger the event to signal generator to proceed
    end
  endtask
endclass
